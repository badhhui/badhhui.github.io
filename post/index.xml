<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hhui&#39;s blog</title>
    <link>https://blog.hhui.me/post/</link>
    <description>Recent content in Posts on Hhui&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Oct 2023 10:59:27 +0800</lastBuildDate><atom:link href="https://blog.hhui.me/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从F2FS的IO流程中理解fscrypt</title>
      <link>https://blog.hhui.me/post/%E4%BB%8Ef2fs%E7%9A%84io%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%90%86%E8%A7%A3fscrypt/</link>
      <pubDate>Mon, 23 Oct 2023 10:59:27 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/%E4%BB%8Ef2fs%E7%9A%84io%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%90%86%E8%A7%A3fscrypt/</guid>
      <description>&lt;p&gt;本文以&lt;code&gt;F2FS&lt;/code&gt;的代码为切入点，通过几个通用的IO操作过程讲解&lt;code&gt;fscrypt&lt;/code&gt;的代码&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MIT s6.081 lab3</title>
      <link>https://blog.hhui.me/post/mit_s6.081_lab3/</link>
      <pubDate>Fri, 22 Sep 2023 20:15:43 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/mit_s6.081_lab3/</guid>
      <description>&lt;p&gt;MIT s6.081课程笔记及实验&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oh my zsh安装记录</title>
      <link>https://blog.hhui.me/post/oh-my-zsh/</link>
      <pubDate>Wed, 20 Sep 2023 16:01:25 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/oh-my-zsh/</guid>
      <description>&lt;p&gt;安装oh my zsh记录过程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MIT s6.081 lab2</title>
      <link>https://blog.hhui.me/post/mit_s6.081_lab2/</link>
      <pubDate>Sat, 16 Sep 2023 15:44:03 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/mit_s6.081_lab2/</guid>
      <description>&lt;p&gt;MIT s6.081课程笔记及实验&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MIT s6.081 lab1</title>
      <link>https://blog.hhui.me/post/mit_s6.081_lab1/</link>
      <pubDate>Wed, 06 Sep 2023 14:36:19 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/mit_s6.081_lab1/</guid>
      <description>&lt;p&gt;MIT s6.081课程笔记及实验&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eBPF学习笔记</title>
      <link>https://blog.hhui.me/post/ebpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 14 Apr 2023 19:37:19 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/ebpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;eBPF学习笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>F2FS</title>
      <link>https://blog.hhui.me/post/f2fs/</link>
      <pubDate>Fri, 30 Sep 2022 15:04:21 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/f2fs/</guid>
      <description>&lt;p&gt;F2FS是一个Linux文件系统，适用于闪存设备，论文的实验结果表明F2FS要比EXT4的性能好很多。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Block大小对F2FS的影响</title>
      <link>https://blog.hhui.me/post/block%E5%A4%A7%E5%B0%8F%E5%AF%B9f2fs%E7%9A%84%E5%BD%B1%E5%93%8D/</link>
      <pubDate>Fri, 30 Sep 2022 14:52:05 +0800</pubDate>
      
      <guid>https://blog.hhui.me/post/block%E5%A4%A7%E5%B0%8F%E5%AF%B9f2fs%E7%9A%84%E5%BD%B1%E5%93%8D/</guid>
      <description>&lt;p&gt;初略计算Block及node size对F2FS元数据和文件索引所占空间的影响。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blog.hhui.me/post/%E8%A6%81%E7%82%B9%E5%92%8C%E8%B4%A1%E7%8C%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hhui.me/post/%E8%A6%81%E7%82%B9%E5%92%8C%E8%B4%A1%E7%8C%AE/</guid>
      <description>要点和贡献 目的：本文介绍了一种新颖的移动设备加密重复数据删除方法，称为FBEDedup（基于文件的加密重复数据删除），该方法在保证重复数据删除的同时有效处理移动设备的特定加密特性。 方法：FBEDedup 将加密和重复数据删除集成到移动操作系统（如 Linux 和 Android）的文件系统中，从而最大限度地减少系统修改并降低数据泄露风险。 关键组件：该系统包括两个主要组件：加密处理程序和重复数据删除处理程序，它们集成在一起以确保数据完整性和安全性。 效率和安全性：该方法允许内联重复数据删除，而不会影响安全性。它使用哈希函数进行数据块指纹识别，以有效管理冗余数据。 实现和评估：FBEDedup 在 F2FS 上实现并使用 FIO 进行评估，与标准 F2FS 相比，在重复数据删除方面表现出良好的性能和效率. 优势 创新方法：FBEDedup 提出了一种在移动系统中进行加密重复数据删除的新颖方法，解决了当前方法中不适合存储有限的单用户移动设备的空白。 集成系统设计：将加密和重复数据删除集成到移动操作系统的文件系统中，减少了对系统进行大量修改的需要。 效率和安全性平衡：密钥适配器组件内各种策略的开发平衡了重复数据删除效率、系统性能和安全性问题。 综合评估：使用模拟移动平台和真实数据进行全面评估，证明系统的有效性。 适应性和未来范围：该系统显示出跨不同文件系统的适应性潜力，并计划在未来版本中支持 EXT4. 弱点 内存开销：系统需要在内存中维护一些元数据以进行定期重复数据删除操作，从而导致潜在的内存开销问题。 当前适应性有限：FBEDedup 目前仅适用于 F2FS 文件系统，限制了其对移动设备中使用的其他文件系统的直接适用性。 某些场景下的性能开销：虽然系统总体性能良好，但与未修改的 F2FS 和仅启用加密的 F2FS 相比，性能开销较小，特别是在高强度数据流中。 密钥管理中的潜在安全风险：虽然本文解决了安全问题，但重复数据删除的密钥管理所涉及的复杂性可能会带来潜在的安全风险. 对作者的提问和反驳建议 内存开销的处理：所提出的交换机制如何解决内存开销问题，以及它对系统性能有何影响？ 各种工作负载中的性能：您能否提供有关 FBEDedup 在各种实际工作负载下的性能的更多见解，特别是考虑到不同的用户行为和数据类型？ 密钥管理策略的安全影响：您能否详细说明本文中提出的不同密钥适配器策略的安全影响，特别是在存在潜在漏洞或攻击场景的情况下？ 对其他文件系统的适应性：使 FBEDedup 适应其他文件系统（如 EXT4）的挑战和潜在解决方案是什么，这可能会如何影响其性能和安全功能？ 总体得分 7/10。FBEDedup 提出了一种在加密移动系统中进行重复数据删除的创新方法，解决了当前方法中的重大缺陷，并展示了高效、安全的数据管理的潜力。然而，对内存开销、有限的当前适应性以及密钥管理策略中潜在的安全风险的担忧略微限制了其直接适用性和可扩展性。</description>
    </item>
    
  </channel>
</rss>
